{"version":3,"sources":["login.js"],"names":["DomHelper","ClearHTML","el","innerHTML","AppendHTML","addition","this","undefined","AlertFactory","GenerateAlert","container","value","type","clearHtml","CreateAlert","message","GenerateDangerAlert","data","GenerateSuccessAlert","HttpHelper","callEndpoint","endpoint","method","callback","request","XMLHttpRequest","onload","readyState","DONE","status","responseText","open","send","UNPROCESSABLE_ENTITY","OK","CREATED","Get","calback","Post","UrlHelper","Redirect","url","delay","setTimeout","window","location","document","getElementById","addEventListener","event","preventDefault","LoginController","Login","getAttribute","ValidateLoginData","username","password","LoginCallback","JSON","parse","redirect_url","source","form","elements","FormData"],"mappings":"CAAA,SAAWA,GAETA,EAAUC,UAAY,SAAUC,GAC9BA,EAAGC,UAAY,IAGjBH,EAAUI,WAAa,SAAUF,EAAIG,GACnCH,EAAGC,UAAYD,EAAGC,UAAYE,IAG/BC,KAAKN,UAA+BO,QAAlBD,KAAKN,aAA+BM,KAAKN,WAE9D,SAAWA,EAAWQ,GAUpB,QAASC,GAAcC,EAAWC,EAAOC,EAAMC,GACzCA,GACFb,EAAUC,UAAUS,GAEtBV,EAAUI,WAAWM,EAAWI,EAAYH,EAAOC,IAGrD,QAASE,GAAYC,EAASH,GAC5B,MAAO,qBAAuBA,EAAO,KAAOG,EAAU,SAhBxDP,EAAaQ,oBAAsB,SAAUN,EAAWG,EAAWI,GACjER,EAAcC,EAAWO,EAAM,eAAgBJ,IAGjDL,EAAaU,qBAAuB,SAAUR,EAAWG,EAAWI,GAClER,EAAcC,EAAWO,EAAM,gBAAiBJ,KAelDb,UACAM,KAAKE,aAAqCD,QAArBD,KAAKE,gBAAkCF,KAAKE,cAEnE,SAAWW,GAcT,QAASC,GAAaC,EAAUC,EAAQL,EAAMM,GAC5C,GAAIC,GAAU,GAAIC,eAElBD,GAAQE,OAAS,WACXF,EAAQG,YAAcF,eAAeG,MACvCL,EAASC,EAAQK,OAAQL,EAAQM,eAGrCN,EAAQO,KAAKT,EAAQD,GACrBG,EAAQQ,KAAKf,GArBfE,EAAWc,qBAAuB,IAClCd,EAAWe,GAAK,IAChBf,EAAWgB,QAAU,IAErBhB,EAAWiB,IAAM,SAAUf,EAAUgB,GACnCjB,EAAaC,EAAU,MAAO,GAAIE,WAGpCJ,EAAWmB,KAAO,SAAUjB,EAAUJ,EAAMM,GAC1CH,EAAaC,EAAU,OAAQJ,EAAMM,KAetCjB,KAAKa,WAAiCZ,QAAnBD,KAAKa,cAAgCb,KAAKa,YAEhE,SAAWoB,GAETA,EAAUC,SAAW,SAAUC,EAAKC,GAClCC,WAAW,WACTC,OAAOC,SAAWJ,GACjBC,KAGJpC,KAAKiC,UAA+BhC,QAAlBD,KAAKiC,aAA+BjC,KAAKiC,WAG5DO,SACGC,eAAe,cACfC,iBAAiB,SAAU,SAAUC,GACpCA,EAAMC,iBACNC,gBAAgBC,MAAM9C,KAAK+C,aAAa,kBAI9C,SAAW7C,EAAcW,EAAYoB,EAAWY,GAiB9C,QAASG,GAAkBC,EAAUC,GAInC,OAAO,EAGT,QAASC,GAAc5B,EAAQC,GAE7B,GAAIb,GAAOyC,KAAKC,MAAM7B,GAClBpB,EAAYoC,SAASC,eAAe,gBAEpClB,IAAUV,EAAWc,sBACC1B,QAApBU,EAAe,UACjBT,EAAaQ,oBAAoBN,GAAW,EAAMO,EAAe,UAE3CV,QAApBU,EAAe,UACjBT,EAAaQ,oBAAoBN,GAAW,EAAOO,EAAe,WAG7DY,GAAUV,EAAWe,KAC5B1B,EAAaU,qBAAqBR,GAAW,EAAMO,EAAKF,SACxDwB,EAAUC,SAASvB,EAAK2C,aAAc,MArC1CT,EAAgBC,MAAQ,SAAUS,GAEhC,GAAIC,GAAOhB,SAASC,eAAe,cAC/BQ,EAAWO,EAAKC,SAAmB,SAAEpD,MACrC6C,EAAWM,EAAKC,SAAmB,SAAEpD,KAEzC,IAAI2C,EAAkBC,EAAUC,GAAW,CAEzC,GAAInC,GAAWwC,EAAS,eACpB5C,EAAO,GAAI+C,UAASF,EAExB3C,GAAWmB,KAAKjB,EAAUJ,EAAMwC,MA+BpCjD,aAAcW,WAAYoB,UAC1BjC,KAAK6C,gBACqB5C,QAAxBD,KAAK6C,mBACE7C,KAAK6C","file":"login.js","sourcesContent":["(function (DomHelper) {\n\n  DomHelper.ClearHTML = function (el) {\n    el.innerHTML = \"\";\n  }\n\n  DomHelper.AppendHTML = function (el, addition) {\n    el.innerHTML = el.innerHTML + addition;\n  }\n\n})(this.DomHelper = (this.DomHelper == undefined) ? {} : this.DomHelper);\n\n(function (DomHelper, AlertFactory) {\n\n  AlertFactory.GenerateDangerAlert = function (container, clearHtml, data) {\n    GenerateAlert(container, data, \"alert-danger\", clearHtml);\n  }\n\n  AlertFactory.GenerateSuccessAlert = function (container, clearHtml, data) {\n    GenerateAlert(container, data, \"alert-success\", clearHtml);\n  }\n\n  function GenerateAlert(container, value, type, clearHtml) {\n    if (clearHtml) {\n      DomHelper.ClearHTML(container);\n    }\n    DomHelper.AppendHTML(container, CreateAlert(value, type));\n  }\n\n  function CreateAlert(message, type) {\n    return \"<div class='alert \" + type + \"'>\" + message + \"</div>\";\n  }\n\n})(\n  DomHelper,\n  this.AlertFactory = (this.AlertFactory == undefined) ? {} : this.AlertFactory\n  );\n(function (HttpHelper) {\n\n  HttpHelper.UNPROCESSABLE_ENTITY = 422;\n  HttpHelper.OK = 200;\n  HttpHelper.CREATED = 201;\n\n  HttpHelper.Get = function (endpoint, calback) {\n    callEndpoint(endpoint, \"GET\", \"\", callback);\n  }\n\n  HttpHelper.Post = function (endpoint, data, callback) {\n    callEndpoint(endpoint, \"POST\", data, callback);\n  }\n\n  function callEndpoint(endpoint, method, data, callback) {\n    var request = new XMLHttpRequest();\n\n    request.onload = function () {\n      if (request.readyState == XMLHttpRequest.DONE) {\n        callback(request.status, request.responseText);\n      }\n    }\n    request.open(method, endpoint);\n    request.send(data);\n  }\n\n})(this.HttpHelper = (this.HttpHelper == undefined) ? {} : this.HttpHelper);\n\n(function (UrlHelper) {\n\n  UrlHelper.Redirect = function (url, delay) {\n    setTimeout(function () {\n      window.location = url;\n    }, delay);\n  }\n\n})(this.UrlHelper = (this.UrlHelper == undefined) ? {} : this.UrlHelper);\n\n{\n  document\n    .getElementById(\"login-form\")\n    .addEventListener(\"submit\", function (event) {\n      event.preventDefault();\n      LoginController.Login(this.getAttribute(\"data-source\"));\n    });\n}\n\n(function (AlertFactory, HttpHelper, UrlHelper, LoginController) {\n\n  LoginController.Login = function (source) {\n\n    var form = document.getElementById(\"login-form\");\n    var username = form.elements[\"username\"].value;\n    var password = form.elements[\"password\"].value;\n\n    if (ValidateLoginData(username, password)) {\n\n      var endpoint = source + \"action/login\";\n      var data = new FormData(form);\n\n      HttpHelper.Post(endpoint, data, LoginCallback);\n    }\n  }\n\n  function ValidateLoginData(username, password) {\n\n    // TODO: Validate the username and password semantics-wise\n\n    return true;\n  }\n\n  function LoginCallback(status, responseText) {\n\n    var data = JSON.parse(responseText);\n    var container = document.getElementById(\"notifications\");\n\n    if (status == HttpHelper.UNPROCESSABLE_ENTITY) {\n      if (data['username'] != undefined) {\n        AlertFactory.GenerateDangerAlert(container, true, data['username']);\n      }\n      if (data['password'] != undefined) {\n        AlertFactory.GenerateDangerAlert(container, false, data['password']);\n      }\n    }\n    else if (status == HttpHelper.OK) {\n      AlertFactory.GenerateSuccessAlert(container, true, data.message);\n      UrlHelper.Redirect(data.redirect_url, 1000);\n    }\n  }\n\n})(\n  AlertFactory, HttpHelper, UrlHelper,\n  this.LoginController = (\n    this.LoginController == undefined\n  ) ? {} : this.LoginController\n  );\n"]}